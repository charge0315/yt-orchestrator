{
  "permissions": {
    "allow": [
      "Bash(mongod:*)",
      "Bash(mongosh:*)",
      "Bash(mongo:*)",
      "Bash(sc query MongoDB)",
      "Read(//c/Users/charg/myWorkspace/**)",
      "Bash(del .editorconfig)",
      "Bash(mklink:*)",
      "Bash(del .gitattributes)",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-orchestrator''; Remove-Item -Force .editorconfig -ErrorAction SilentlyContinue; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-orchestrator''; Remove-Item -Force .gitattributes -ErrorAction SilentlyContinue; cmd /c mklink .gitattributes ''C:\\Users\\charg\\.gitattributes''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-music-playlist-ext''; Remove-Item -Force .editorconfig -ErrorAction SilentlyContinue; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-buzz-ext''; Remove-Item -Force .editorconfig -ErrorAction SilentlyContinue; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\audio-toolkit''; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\audio-toolkit''; cmd /c mklink .gitattributes ''C:\\Users\\charg\\.gitattributes''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-analyzer-ext''; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\yt-analyzer-ext''; cmd /c mklink .gitattributes ''C:\\Users\\charg\\.gitattributes''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\music-data-manager''; cmd /c mklink .editorconfig ''C:\\Users\\charg\\.editorconfig''\")",
      "Bash(powershell -Command \"cd ''C:\\Users\\charg\\myWorkspace\\music-data-manager''; cmd /c mklink .gitattributes ''C:\\Users\\charg\\.gitattributes''\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\yt-orchestrator\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.gitattributes\" \"C:\\Users\\charg\\myWorkspace\\yt-orchestrator\\.gitattributes\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\yt-music-playlist-ext\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\yt-buzz-ext\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\audio-toolkit\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.gitattributes\" \"C:\\Users\\charg\\myWorkspace\\audio-toolkit\\.gitattributes\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\yt-analyzer-ext\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.gitattributes\" \"C:\\Users\\charg\\myWorkspace\\yt-analyzer-ext\\.gitattributes\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.editorconfig\" \"C:\\Users\\charg\\myWorkspace\\music-data-manager\\.editorconfig\")",
      "Bash(copy /Y \"C:\\Users\\charg\\.gitattributes\" \"C:\\Users\\charg\\myWorkspace\\music-data-manager\\.gitattributes\")",
      "Bash(powershell -Command \"Copy-Item -Force ''C:\\Users\\charg\\.editorconfig'' ''C:\\Users\\charg\\myWorkspace\\yt-orchestrator\\.editorconfig''\")",
      "Bash(powershell -Command:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nchore: 開発環境設定ファイルの共通化\n\nEditorConfigを全プロジェクト共通設定に更新\n- 全ファイルタイプに対応した包括的な設定\n- Python、Shell、Makefileのサポートを追加\n- C:\\Users\\charg\\.editorconfig から配布\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "Bash(git commit -m \"$(cat <<''EOF''\nchore: 開発環境設定ファイルの共通化とクリーンアップ\n\n## Claude Code設定\n- .claude/settings.local.json を新規作成（空設定）\n- 汎用コマンドは C:\\Users\\charg\\.claude\\settings.global.json で管理\n\n## EditorConfig\n- 全ファイルタイプに対応した包括的な設定\n- Python、Shell、Makefileのサポートを追加\n\n## GitAttributes\n- 包括的なファイルタイプカバレッジ\n- フォント、メディアファイル、ドキュメントのバイナリ扱いを追加\n\nこれらの設定は全プロジェクトで共通化されています。\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nchore: 開発環境設定ファイルの共通化とクリーンアップ\n\n## Claude Code設定\n- .claude/settings.local.json を整理（空設定）\n- 汎用コマンドは C:\\Users\\charg\\.claude\\settings.global.json で管理\n\n## EditorConfig\n- 全ファイルタイプに対応した包括的な設定\n- Python、Shell、Makefileのサポートを追加\n\n## GitAttributes\n- 包括的なファイルタイプカバレッジ\n- フォント、メディアファイル、ドキュメントのバイナリ扱いを追加\n\nこれらの設定は全プロジェクトで共通化されています。\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "Bash(npx tsx:*)"
    ],
    "deny": [],
    "ask": []
  }
}
